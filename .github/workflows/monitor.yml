name: Instagram Monitor

on:
  workflow_dispatch:
    inputs:
      users:
        description: "Comma-separated usernames (no @). Leave blank for default."
        required: false
        default: "therock"
      prefer_mobile:
        description: "Prefer mobile web JSON fallback for profiles"
        required: false
        default: "false"
  schedule:
    - cron: "0 */6 * * *"

concurrency:
  group: instagram-monitor
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      user_matrix: ${{ steps.mk.outputs.user_matrix }}
    steps:
      - name: Build user matrix from CSV
        id: mk
        shell: bash
        run: |
          USERS_INPUT="${{ github.event.inputs.users }}"
          if [ -z "$USERS_INPUT" ]; then USERS_INPUT="therock"; fi
          export USERS_INPUT
          # Write directly to $GITHUB_OUTPUT from Python (no command substitution, no trailing ')')
          python3 - "$GITHUB_OUTPUT" <<'PY'
import os, json, sys
out = sys.argv[1]
raw = os.environ.get("USERS_INPUT","").strip()
users = [u.strip().lstrip("@") for u in raw.split(",") if u.strip()]
arr = json.dumps(users if users else ["therock"])
with open(out, "a", encoding="utf-8") as f:
    f.write(f"user_matrix={arr}\n")
PY

  monitor:
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        user: ${{ fromJson(needs.plan.outputs.user_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run monitor (auto unauth if no creds)
        env:
          INSTAGRAM_SESSION_USERNAME: ${{ secrets.INSTAGRAM_SESSION_USERNAME }}
          INSTAGRAM_SESSION_PASSWORD: ${{ secrets.INSTAGRAM_SESSION_PASSWORD }}
        shell: bash
        run: |
          USERNAME='${{ matrix.user }}'
          OUT="monitoring_data/${USERNAME}"
          mkdir -p "$OUT"

          FLAGS="--download-pfp"
          if [ "${{ github.event.inputs.prefer_mobile }}" = "true" ]; then
            FLAGS="$FLAGS --prefer-mobile"
          fi
          if [ -z "${INSTAGRAM_SESSION_USERNAME}" ] || [ -z "${INSTAGRAM_SESSION_PASSWORD}" ]; then
            echo "[info] No IG creds detected; using --unauth-only"
            FLAGS="$FLAGS --unauth-only"
          fi

          echo "Running: python monitor.py --mode monitor --target-user '$USERNAME' --output-dir '$OUT' $FLAGS"
          python monitor.py \
            --mode monitor \
            --target-user "$USERNAME" \
            --output-dir "$OUT" \
            $FLAGS

      - name: Commit changes (if any)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update IG data for ${{ matrix.user }}"
          file_pattern: |
            monitoring_data/**/*.json
            monitoring_data/**/*.jpg
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          skip_dirty_check: false
