name: Instagram Monitor with GitHub Pages

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      target_user:
        description: 'Instagram username to monitor'
        required: true
        default: 'bob'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  monitor-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install instaloader requests
        
    - name: Create data directory
      run: mkdir -p docs/data
      
    - name: Run Instagram Monitor
      env:
        INSTAGRAM_TARGET_USER: ${{ github.event.inputs.target_user || 'bob' }}
        # Add your Instagram credentials as repository secrets if needed
        # INSTAGRAM_SESSION_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
        # INSTAGRAM_SESSION_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
      run: |
        python monitor.py --target-user "${{ github.event.inputs.target_user || 'bob' }}" --output-dir docs/data
        
    - name: Generate HTML Dashboard
      run: |
        cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Instagram Monitor Dashboard</title>
            <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }
                
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                    padding: 20px;
                }
                
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    background: rgba(255, 255, 255, 0.95);
                    backdrop-filter: blur(10px);
                    border-radius: 20px;
                    padding: 30px;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                }
                
                .header {
                    text-align: center;
                    margin-bottom: 40px;
                }
                
                .header h1 {
                    color: #333;
                    font-size: 2.5em;
                    margin-bottom: 10px;
                    background: linear-gradient(45deg, #667eea, #764ba2);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                }
                
                .loading {
                    text-align: center;
                    padding: 40px;
                    color: #666;
                }
                
                .profile-card {
                    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
                    color: white;
                    padding: 30px;
                    border-radius: 15px;
                    margin-bottom: 30px;
                    box-shadow: 0 10px 30px rgba(240, 147, 251, 0.3);
                }
                
                .profile-header {
                    display: flex;
                    align-items: center;
                    gap: 20px;
                    margin-bottom: 20px;
                }
                
                .profile-pic {
                    width: 80px;
                    height: 80px;
                    border-radius: 50%;
                    border: 3px solid rgba(255, 255, 255, 0.3);
                }
                
                .profile-info h2 {
                    font-size: 1.8em;
                    margin-bottom: 5px;
                }
                
                .profile-info .username {
                    opacity: 0.9;
                    font-size: 1.1em;
                }
                
                .stats-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                    gap: 20px;
                    margin-bottom: 30px;
                }
                
                .stat-card {
                    background: white;
                    padding: 25px;
                    border-radius: 15px;
                    text-align: center;
                    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
                    transition: transform 0.3s ease;
                }
                
                .stat-card:hover {
                    transform: translateY(-5px);
                }
                
                .stat-number {
                    font-size: 2.5em;
                    font-weight: bold;
                    color: #333;
                    margin-bottom: 5px;
                }
                
                .stat-label {
                    color: #666;
                    font-size: 0.9em;
                    text-transform: uppercase;
                    letter-spacing: 1px;
                }
                
                .changes-section {
                    background: #f8f9fa;
                    padding: 25px;
                    border-radius: 15px;
                    margin-bottom: 20px;
                }
                
                .changes-title {
                    color: #333;
                    margin-bottom: 15px;
                    font-size: 1.3em;
                }
                
                .change-item {
                    background: white;
                    padding: 15px;
                    margin-bottom: 10px;
                    border-radius: 8px;
                    border-left: 4px solid #667eea;
                }
                
                .timestamp {
                    text-align: center;
                    color: #666;
                    font-size: 0.9em;
                    margin-top: 20px;
                }
                
                .error {
                    background: #ff6b6b;
                    color: white;
                    padding: 20px;
                    border-radius: 10px;
                    text-align: center;
                }
                
                @keyframes pulse {
                    0%, 100% { opacity: 1; }
                    50% { opacity: 0.5; }
                }
                
                .loading {
                    animation: pulse 2s ease-in-out infinite;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>ðŸ“Š Instagram Monitor Dashboard</h1>
                    <p>Real-time Instagram profile analytics</p>
                </div>
                
                <div id="content">
                    <div class="loading">Loading Instagram data...</div>
                </div>
            </div>
            
            <script>
                async function loadInstagramData() {
                    try {
                        const response = await fetch('./data/monitoring_summary.json');
                        if (!response.ok) {
                            throw new Error('Failed to load data');
                        }
                        const data = await response.json();
                        displayData(data);
                    } catch (error) {
                        displayError('Failed to load Instagram data. Please try again later.');
                        console.error('Error:', error);
                    }
                }
                
                function displayData(data) {
                    const content = document.getElementById('content');
                    const lastUpdated = new Date(data.timestamp).toLocaleString();
                    
                    content.innerHTML = `
                        <div class="profile-card">
                            <div class="profile-header">
                                <img src="${data.profile_pic_url}" alt="Profile Picture" class="profile-pic">
                                <div class="profile-info">
                                    <h2>${data.full_name || data.username}</h2>
                                    <div class="username">@${data.username}</div>
                                    ${data.is_private ? '<span style="background: rgba(255,255,255,0.2); padding: 4px 8px; border-radius: 12px; font-size: 0.8em;">ðŸ”’ Private</span>' : ''}
                                    ${data.is_verified ? '<span style="background: rgba(255,255,255,0.2); padding: 4px 8px; border-radius: 12px; font-size: 0.8em;">âœ“ Verified</span>' : ''}
                                </div>
                            </div>
                            ${data.bio ? `<div style="opacity: 0.9; line-height: 1.5;">${data.bio}</div>` : ''}
                        </div>
                        
                        <div class="stats-grid">
                            <div class="stat-card">
                                <div class="stat-number">${data.followers.toLocaleString()}</div>
                                <div class="stat-label">Followers</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-number">${data.following.toLocaleString()}</div>
                                <div class="stat-label">Following</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-number">${data.posts.toLocaleString()}</div>
                                <div class="stat-label">Posts</div>
                            </div>
                            ${data.has_stories ? `
                            <div class="stat-card">
                                <div class="stat-number">${data.story_count || 1}</div>
                                <div class="stat-label">Stories</div>
                            </div>
                            ` : ''}
                        </div>
                        
                        ${data.changes && data.changes.has_changes ? `
                        <div class="changes-section">
                            <h3 class="changes-title">ðŸ”” Recent Changes</h3>
                            ${data.changes.changes_detected.map(change => `
                                <div class="change-item">${change}</div>
                            `).join('')}
                        </div>
                        ` : ''}
                        
                        <div class="timestamp">
                            Last updated: ${lastUpdated}
                        </div>
                    `;
                }
                
                function displayError(message) {
                    const content = document.getElementById('content');
                    content.innerHTML = `<div class="error">${message}</div>`;
                }
                
                // Load data when page loads
                loadInstagramData();
                
                // Auto-refresh every 5 minutes
                setInterval(loadInstagramData, 300000);
            </script>
        </body>
        </html>
        EOF
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
